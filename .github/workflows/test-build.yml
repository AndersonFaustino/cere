name: test-build

on:
  push:
    branches: [ master ]

  pull_request:

jobs:
  run_tests:
    runs-on: ubuntu-20.04
    name: x86 Ubuntu 20.04


    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install CERE dependencies
        run: |
          sudo apt-get -y update
          sudo apt-get -y install locales
          sudo locale-gen --no-purge en_US.UTF-8
          export LANG="en_US.UTF-8"
          export LANGUAGE="en_US:en"
          export LC_ALL="en_US.UTF-8" 
          export DEBIAN_FRONTEND="noninteractive"
          export TZ="Europe/Paris"
          sudo apt-get -y install \
          autoconf automake build-essential libtool  \
          python python3-pip ruby ruby-dev \
          libgoogle-perftools-dev google-perftools numactl dc python git  \
          wget opt pkg-config libtool build-essential  libgmp3-dev \
          llvm-7 llvm-7-dev llvm-7-tools libomp-7-dev clang-7 flang-7 \
          python3-matplotlib python3-jinja2 python3-sklearn python3-numpy \
          python3-pulp python3-pydot libgraphviz-dev python3-pygraphviz \
          python3-pydotplus python3-networkx
          
      - name: Get rvm & rdiscount
        run: |
          sudo gem install ronn-ng
  
      - name: Create symlinks for LLVM & Python
        run: |
          sudo ln -s /usr/bin/llvm-config-7 /usr/bin/llvm-config
          sudo rm /usr/bin/python
          sudo ln -s /usr/bin/python3.8 /usr/bin/python
          
      - name: Build & install CERE
        run: |
          export LANG="en_US.UTF-8"
          export LANGUAGE="en_US:en"
          export LC_ALL="en_US.UTF-8"
          export PATH=$PATH:/var/lib/gems/2.7.0/gems/ronn-ng-0.9.1/bin
          export PYTHONPATH=/usr/local/lib/python3.8/site-packages
          libtoolize && ./autogen.sh && ./configure
          make && sudo make install && make clean

      - name: Run CERE tests
        run: |
          export PYTHONPATH=/usr/local/lib/python3.8/site-packages
          make check

      - name : Archive test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{github.sha}}_test.log
          path: tests/testplan.log
